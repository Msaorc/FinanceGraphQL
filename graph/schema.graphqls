type Lancamento {
  id: ID!
  descricao: string!
  tipo: TipoLacamento!
  categoria: Categoria!
  valor: Decimal!
  formaPagamento: FormaPagamento!
  observacao: string
  necessidade: NivelNecessidade!
  recorrencia: integer
}

type Categoria{
  id: ID!
  descricao: string!
  lancamento: [Lancamento]
}

type TipoLacamento {
  id: ID!
  descricao: string!
  lancamento: [Lancamento]
}

type FormaPagamento {
  id: ID!
  descricao: string!
  lancamento: [Lancamento]
}

type NivelNecessidade {
  id: ID!
  descricao: string!
  cor: string!
  lancamento: [Lancamento]
}

input NovoLancamento {
  descricao: string!
  valor: Decimal!
  observacao: string
  recorrencia: integer
  tipoId: ID!
  categoriaId: ID!
  formaPagamentoId: ID!
  necessidadeId: ID!
}

input NovaCategoria {
  descricao: string!
}

input NovoTipoLancamento {
  descricao: string!
}

input NovaFormaPagamento {
  descricao: string!
}

input NovoNivelNecessidade {
  descricao: string!
}

type Query {
  lacamentos: [Lancamento]
  categorias: [Categoria]
  tiposLacamento: [TipoLacamento]
  formasPagamento: [FormaPagamento]
  niveisNecessidade: [NivelNecessidade]
}

type Mutation {
  criarLacamento(input: NovoLancamento!) Lancamento!
  criarCategoria(input: NovaCategoria!) Categoria!
  criarLacamento(input: NovoTipoLancamento!) TipoLacamento!
  criarLacamento(input: NovaFormaPagamento!) FormaPagamento!
  criarLacamento(input: NovoNivelNecessidade!) NivelNecessidade!  
}
