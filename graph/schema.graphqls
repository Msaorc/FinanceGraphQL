type Lancamento {
  id: ID!
  descricao: String!
  tipo: TipoLacamento!
  categoria: Categoria!
  valor: Float!
  formaPagamento: FormaPagamento!
  observacao: String
  necessidade: NivelNecessidade!
  recorrencia: Int
}

type Categoria{
  id: ID!
  descricao: String!
  lancamento: [Lancamento]
}

type TipoLacamento {
  id: ID!
  descricao: String!
  lancamento: [Lancamento]
}

type FormaPagamento {
  id: ID!
  descricao: String!
  lancamento: [Lancamento]
}

type NivelNecessidade {
  id: ID!
  descricao: String!
  cor: String!
  lancamento: [Lancamento]
}

input NovoLancamento {
  descricao: String!
  valor: Float!
  observacao: String
  recorrencia: Int
  tipoId: ID!
  categoriaId: ID!
  formaPagamentoId: ID!
  necessidadeId: ID!
}

input NovaCategoria {
  descricao: String!
}

input NovoTipoLancamento {
  descricao: String!
}

input NovaFormaPagamento {
  descricao: String!
}

input NovoNivelNecessidade {
  descricao: String!
  cor: String!
}

type Query {
  lacamentos: [Lancamento]
  categorias: [Categoria]
  tiposLacamento: [TipoLacamento]
  formasPagamento: [FormaPagamento]
  niveisNecessidade: [NivelNecessidade]
}

type Mutation {
  criarLancamento(input: NovoLancamento!): Lancamento!
  criarCategoria(input: NovaCategoria!): Categoria!
  criarTipoLacamento(input: NovoTipoLancamento!): TipoLacamento!
  criarFormaPagamento(input: NovaFormaPagamento!): FormaPagamento!
  criarNivelNecessidade(input: NovoNivelNecessidade!): NivelNecessidade!  
}
